# edit these values to match that of your production machine
# which will be cloned from

# The aws role/credentials you set here should only have read access to the
# production S3 bucket and DB instance to keep your production data safe and happy
# If both staging and production are in the same account,
# there's no need for the staging/production split.
# Like so:
#  aws_region: 'us-west-1'
#  aws_access_key_id: keyid
#  aws_secret_access_key: accesskey
staging: &staging
  aws_region: 'us-west-1'
  aws_access_key_id:
  aws_secret_access_key:
production:
  <<: *staging
  account_id:          # the account ID to use when constructing the full snapshot arn
#  role_arn:            # role to assume to get into production

aws_production_bucket: # this bucket is read from
aws_staging_bucket:    # this bucket is DELETED and written to!
bucket_prefix:         # limit the bucket content to copy to keys that begin with this

db_instance_id_production: "actioncenter"           # this db_instance is read from
db_instance_id_staging: "actioncenter-staging"      # this db_instance is DELETED and written to!
db_snapshot_id: "actioncenter-snapshot-for-staging" # this db snapshot id is OVERWRITTEN

# Will be added to RestoreDBInstanceFromDBSnapshot call
db_staging_options:
  db_instance_class: "db.t1.micro"

# Will be added to ModifyDBInstance call
db_staging_modifications:
  backup_retention_period: 0
  master_user_password:
